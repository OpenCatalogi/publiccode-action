name: 'Create or Update publiccode.yaml'
author: 'Open Catalogi'
description: 'Creates or updates the publiccode.yal or publicorganisation.yml file with repository metadata'

inputs:
  remoterepo:
    description: 'Git url of the remote repository you want to check'
    required: false
    default: ''
  publiccode:
    description: 'publiccode.yml path'
    required: false
    default: 'publiccode.yml'
  gitname:
    description: 'Git name configuration for bump commit'
    required: false
    default: 'Open Catalogi bot'
  gitmail:
    description: 'Git mail configuration for bump commit'
    required: false
    default: 'bot@opencatalogi.nl'

outputs:
  version:
    description: 'New version of softwareVersion field in publiccode.yml'
  releaseDate:
    description: 'New release date of releaseDate field in publiccode.yml'

runs:
  using: "composite"
  steps:
    # Check out the code
    - name: Checkout code
      uses: actions/checkout@v2
    # Install Python
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    # Transfer the repossitory data to the container
    - name: Transfer the repossitory data to the container
      run:
        REPO_NAME="${{ github.event.repository.name }}"
        REPO_DESC="${{ github.event.repository.description }}"
        REPO_URL="${{ github.event.repository.html_url }}"
        REPO_HOMEPAGE="${{ github.event.repository.homepage }}"
        #REPO_TOPICS="${{ github.event.repository.topics }}"
        REPO_LICENSE="${{ github.event.repository.license.key }}"
        REPO_CREATED_AT="${{ github.event.repository.created_at }}"
        
        ORGANISATION_NAME="${{ github.event.organization.login }}"
        ORGANISATION_DESCRIPTION="${{ github.event.organization.description }}"
        ORGANISATION_GITID="${{ github.event.organization.id}}"
        ORGANISATION_URL="${{ github.event.organization.login }}"
        ORGANISATION_AVATAR="${{ github.event.organization.avatar_url }}"
      
        echo "Installing PyYAML..."
        pip install PyYAML

    # Bit of test coding to see if everything works
    - run: echo Hello ${{ inputs.who-to-greet }}.
      shell: bash
    - id: random-number-generator
      run: echo "random-number=$(echo $RANDOM)" >> $GITHUB_OUTPUT
      shell: bash
    - run: echo "${{ github.action_path }}" >> $GITHUB_PATH
      shell: bash
      # Create changes  if it is a normal repository
    - name: Craate or update the publiccode file
      if: (!contains(github.repository, '.github'))
      run: python update_publiccode.py
      shell: bash
      # Create changes  if it is an organisation repository
    - name: Craate or update the publicorganisation file
      if: (contains(github.repository, '.github'))
      run: python update_publicorganisation.py
      shell: bash
    # Commit changes if it is a normal repository
    - name: Commit changes
      if: (!contains(github.repository, '.github'))
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add publiccode.yaml
        git commit -m "${{ github.workflow }}" || echo "No changes to commit"
        git push
    # Commit changes if it is an organisation repository
    - name: Commit changes
      if: (contains(github.repository, '.github'))
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add publicorganisation.yaml
        git commit -m "${{ github.workflow }}" || echo "No changes to commit"
        git push
    # Post Repository URL to OpenCatalogi API
    - name: Post Repository URL to OpenCatalogi API
      run: |
        curl -X POST "https://api.opencatalogi.nl/api/github_events" \
        -H "Content-Type: application/json" \
        -d '{
          "repository": {
            "html_url": "'${{ github.event.repository.html_url }}'"
          }
        }'

branding:
  icon: 'file'
  color: 'blue'
